path:
  /users:
    get:
      summary: Fetch all users
      tags: [User]      
      responses:
        "200":
          description: Users fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                example:
                  status: true
                  data:
                    - user_id: HGU6T-9UGGY-GIHGF-YT65R
                      firstname: Chibuzo
                      lastname: Okeke
                      email: outdur@example.com 
                      phone: 09010000000   
                      status: Pending
    put:
      summary: Update user information
      tags: [User]     
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                email:
                  type: string 
                phone: 
                  type: string   
                photo:
                  type: file  
                status: 
                  type: boolean             
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                example:
                  status: true
                  data:
                    user_id: HGU6T-9UGGY-GIHGF-YT65R
                    firstname: Chibuzo
                    lastname: Okeke
                    email: outdur@example.com 
                    phone: 09010000000  
                    photo_url: https://photo-url 
                    status: Pending                          
  /users/:id:
    get:
      summary: Find user and return details
      tags: [User]
      parameters:
        - in: path
          id:
          schema:
            type: string
          required: true
      responses:
        "200":
          description: User found
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/User'
  /users/events:
    get:
      summary: Fetch upcoming events the user has created.
      tags: [User Events]                
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
        - in: query
          name: filter
          schema:
            type: string
            enum:
              - upcoming
              - previous
              - cancelled  
      responses:
        "200":
          description: (User) Events fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: boolean
                  data:
                    type: object
                    example:
                      - event_id: 1UFDHF-U989D-FHKJK3-33JJS
                        title: Weekend Road walk 
                        description: This event is an activity   
                        event_type: circle-event
                        venue: 109 Shalaba Avenue
                        photo_url: http://photo-url
                        event_tags: 'sports, gym, challenge'
                        event_date: 23/08/2020                    
  /users/interests:
    put:
      summary: Update user interest
      tags: [User Interests]     
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interests:
                  type: array
              example:
                interests:
                  - Hiking
                  - Table tennis           
      responses:
        "200":
          description: User interests updated
          content:
            application/json:
              schema:
                example:
                  status: true
                  data: {}    
    get:
      summary: Fetch user interests
      tags: [User Interests]          
      responses:
        "200":
          description: User interests fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: object
                example:
                  status: true
                  data:
                    interests:
                      - 'Hiking'
                      - 'Table tennis'        
  /interests:
    get:
      summary: Fetch all interests
      tags: [Interests]          
      responses:
        "200":
          description: Interests fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: object
                example:
                  status: true
                  data:
                    interests:
                      - 'Hiking'
                      - 'Table tennis' 
                      - 'Video game'                           